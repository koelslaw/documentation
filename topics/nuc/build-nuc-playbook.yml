---
# Automates the install of intel NUC



################################
######### Epel Release #########
################################
# The DISA STIG for CentOS 7.4.1708 enforces a GPG signature check for all repodata. While this is generally a good idea, it causes repos tha do not use GPG Armor to fail.
# One example of a repo that does not use GPG Armor is Epel; which is a dependency of CAPES (and tons of other projects, for that matter).
# To fix this, we are going to disable the GPG signature and local RPM GPG signature checking.
# I'm open to other options here.
# RHEL's official statement on this: https://access.redhat.com/solutions/2850911


- name: Prepare NUC for Rock deployment
  gather_facts: No
  hosts: default
  hosts: localhost
  become: yes

  tasks:
  - name: Setting GPG checks for install
    command: sudo sed -i 's/repo_gpgcheck=1/repo_gpgcheck=0/' /etc/yum.conf
    command: sudo sed -i 's/localpkg_gpgcheck=1/localpkg_gpgcheck=0/' /etc/yum.conf

#if you are going to create a local repo then you can comment this out
  #
  # - name: Download rpms for offline use
  #   command: sudo yum install --downloadonly --downloaddir=/var/www/html/repo/capes epel-release mariadb-server ansible firewalld bzip2 npm gcc-c++ git java-1.8.0-openjdk.x86_64 python36u python36u-pip python36u-devel thehive cortex https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-5.6.0.rpm https://centos7.iuscommunity.org/ius-release.rpm libffi-devel python-devel python-pip ssdeep-devel ssdeep-libs perl-Image-ExifTool file-devel nginx httpd-tools yum-utils ntp httpd mariadb-server syslinux tftp-server xinetd tftp dhcp

  - name: set timezone to UTC
    timezone:
      name: UTC


  - name: Create Directory for Gitea
    file:
      path: /opt/gitea
      state: directory
      mode: 744
      recurse: yes
      owner: gitea
      group: gitea

  - name: Grab Gitea and give it a home
    get_url:
      url: https://dl.gitea.io/gitea/master/gitea-master-linux-amd64
      dest: /opt/gitea/gitea
      mode: 744


  - name: Install dnsmasq and dependencies to build simplerock.lan
    yum:
      name: "{{ packages }}"
    vars:
      packages:
      - yum-utils
      # - ntp
      - httpd
      - mariadb-server
      - syslinux
      - tftp-server
      - xinetd
      - tftp
      # - dhcp
      - createrepo

  - name: Create Directory for tftpboot
    file:
      path: /var/lib/tftpboot/pxelinux.cfg
      state: directory
      recurse: yes

  - name: Restart MariaDB
    systemd:
      state: started
      name: mariadb
      enabled: yes

  # - name: Restart DNSmasq
  #   systemd:
  #     state: started
  #     name: dnsmasq
  #     enabled: yes
  #
  # - name: Restart Network Time Protocol
  #   systemd:
  #     state: started
  #     name: ntpd
  #     enabled: yes

  - name: Restart Apache (HTTP)
    systemd:
      state: started
      name: httpd
      enabled: yes

  - name: Restart Chrony
    systemd:
      state: restarted
      name: chronyd
      enabled: yes

  - name: Create CAPES Directory
    file:
      path: /var/www/html/repo/capes
      state: directory
      mode: 0775
      recurse: yes

  - name: Create OpenVAS Directory
    file:
      path: /var/www/html/repo/openvas
      state: directory
      mode: 0775
      recurse: yes

  - name: Create Grass Marlin Directory
    file:
      path: /var/www/html/repo/grassmarlin
      state: directory
      mode: 0775
      recurse: yes

  - name: Download Git RPM
    get_url:
      url: http://opensource.wandisco.com/centos/7/git/x86_64/wandisco-git-release-7-2.noarch.rpm
      dest: /var/www/html/repo/capes
      mode: 755

  - name: Download the 'Development tools' package group for CAPES
    command: sudo yum groupinstall "Development Tools" --downloadonly --downloaddir=/var/www/html/repo/capes

  - name: Add Elastic GPG Key
    rpm_key:
      state: present
      key: https://artifacts.elastic.co/GPG-KEY-elasticsearch

#if you are going to sync all the repos then you can comment ths out
  # - name: Create Local ROCK REPO for servers to use, this could take a min depending on your internet connection
  #   command: reposync -p /var/www/html/repo -r group_rocknsm-rocknsm-2.1 -l

  - name: Create Directory for Iso Images
    file:
      path: /var/www/html/iso
      state: directory

  - name: Making firewall change for HTTP service
    firewalld:
      service: http
      permanent: true
      state: enabled

  # - name: Making firewall change for DHCP service
  #   firewalld:
  #     service: dhcp
  #     permanent: true
  #     state: enabled
  #
  # - name: Making firewall change for DNS service
  #   firewalld:
  #     service: dns
  #     permanent: true
  #     state: enabled
  #
  # - name: Making firewall change for ntp service
  #   firewalld:
  #     service: ntp
  #     permanent: true
  #     state: enabled
  #
  - name: Making firewall change for Gitea
    firewalld:
      port: 4000/tcp
      permanent: true
      state: enabled

  - name: Reload firewall with changes
    command: sudo firewall-cmd --reload

  #
  # - name: Add reposync to crontab
  #   cron:
  #     name: "check dirs"
  #     minute: "0"
  #     hour: "0"
  #     weekday: "2"
  #     job: "reposync -ln --download_path=/var/www/html/repo > /dev/null"
  #
  # - name: Add Repomanage to crontab
  #   cron:
  #     name: "check dirs"
  #     minute: "0"
  #     weekday: "2"
  #     hour: "0"
  #     job: "sudo repomanage -k2 --old /var/www/html/repo | xargs rm -f > /dev/null"
...
